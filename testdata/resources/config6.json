{
  "bigip": {
    "url": "http://example.com",
    "username": "admin",
    "password": "pass",
    "partitions": ["cf"]
  },
  "global": {
    "log-level": "info",
    "verify-interval": 30
  },
  "resources": {
    "cf": {
      "virtualServers": [{
        "name": "cf-foo-e500900501f76ce8",
        "pool": "/cf/cf-foo-e500900501f76ce8",
        "ipProtocol": "tcp",
        "enabled": true,
        "destination": "/cf/10.0.0.1:65535",
        "source": "10.0.0.1/32",
        "profiles": [{
          "name": "http",
          "partition": "Common",
          "context": "all"
        }, {
          "name": "tcp",
          "partition": "Common",
          "context": "all"
          }],
        "rules": ["/cf/jsessionid-persistence"],
        "sourceAddressTranslation": {
          "type": "automap"
        }
      }, {
        "name": "routing-vip-http",
        "ipProtocol": "tcp",
        "enabled": true,
        "destination": "/cf/127.0.0.1:80",
        "policies": [{
          "name": "cf-routing-policy",
          "partition": "cf"
        }],
        "profiles": [{
          "name": "http",
          "partition": "Common",
          "context": "all"
        }, {
          "name": "tcp",
          "partition": "Common",
          "context": "all"
          }],
        "rules": ["/cf/forward-to-vip"],
        "sourceAddressTranslation": {
          "type": "automap"
        }
      }],
      "pools": [{
        "name": "cf-foo-e500900501f76ce8",
        "loadBalancingMode": "round-robin",
        "members": [{
          "address": "127.0.0.1",
          "port": 80,
          "session": "user-enabled"
        }],
        "monitors": ["/Common/tcp_half_open"],
        "description": "route: foo.cf.com - App GUID: 1"
      }],
      "l7Policies": [{
        "controls": ["forwarding"],
        "legacy": true,
        "name": "cf-routing-policy",
        "requires": ["http"],
        "rules": [{
          "actions": [{
            "name": "0",
            "request": true,
            "expression": "cf-foo-e500900501f76ce8",
            "tmName": "target_vip",
            "tcl": true,
            "setVariable": true
          }],
          "conditions": [{
            "equals": true,
            "host": true,
            "httpHost": true,
            "name": "0",
            "index": 0,
            "request": true,
            "values": ["foo.cf.com"]
          }],
          "name": "cf-foo-e500900501f76ce8",
          "ordinal": 0,
          "description": "route: foo.cf.com - App GUID: 1"
        }],
        "strategy": "/Common/first-match"
      }],
      "iRules": [{
        "name": "forward-to-vip",
        "apiAnonymous": "\nwhen HTTP_REQUEST {\n  if {[info exists target_vip] \u0026\u0026 [string length $target_vip] != 0} {\n    if { [catch { virtual $target_vip } ] } {\n      log local0. \"ERROR: Attempting to assign traffic to non-existent virtual $target_vip\"\n      reject\n    }\n  }\n}"
      }, {
        "name": "jsessionid-persistence",
        "apiAnonymous": "\nwhen HTTP_RESPONSE {\n  set jsessionid [lsearch -inline -regexp [HTTP::cookie names] (?i)^jsessionid$]\n  if { $jsessionid ne \"\" } {\n    set maxAge [HTTP::cookie maxage $jsessionid]\n    if { $maxAge < 0 } {\n      persist add uie [HTTP::cookie $jsessionid] 3600\n    } elseif { $maxAge == 0 } {\n      if { [persist lookup uie [HTTP::cookie $jsessionid]] } {\n        persist delete uie [HTTP::cookie $jsessionid]\n      }\n    } else {\n      persist add uie [HTTP::cookie $jsessionid] $maxAge\n    }\n  }\n}\nwhen HTTP_REQUEST {\n  set jsessionid [lsearch -inline -regexp [HTTP::cookie names] (?i)^jsessionid$]\n  if { $jsessionid ne \"\" } {\n    set forwardNode [persist lookup uie [HTTP::cookie $jsessionid] node]\n    set forwardPort [persist lookup uie [HTTP::cookie $jsessionid] port]\n    set forwardIP $forwardNode:$forwardPort\n    if { $forwardNode ne \"\" && $forwardPort ne \"\" } {\n      node $forwardIP\n    } else {\n      log local0. \"Could not find endpoint for persistence record: [HTTP::cookie $jsessionid]. \\\n      Check to see if this record still exists (check Statistics -> Module Statistics -> Local \\\n      Traffic -> Persistence Records) or the status of the records endpoint.\"\n    }\n  }\n}"
      }],
      "internalDataGroups": [{
        "name": "cf-ctlr-data-group",
        "records": [{
          "name": "cf-foo-e500900501f76ce8",
          "data": "eyJiaW5kQWRkciI6IjEwLjAuMC4xIiwicG9ydCI6NjU1MzV9"
        }]
      }]
    }
  }
}
